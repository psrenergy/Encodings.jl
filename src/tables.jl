# ISO_LATIN_1 tables from:
# https://cs.stanford.edu/people/miles/iso8859.html

const DECODE_ISO_LATIN_1 = Dict{UInt8, Char}(
    # Special Characters
    0xA0 =>	' ',    # reaking space	 
    0xA1 =>	'¡',	# inverted exclamation mark	 
    0xA2 =>	'¢',	# cent sign	 
    0xA3 =>	'£',	# pound sterling sign	 
    0xA4 =>	'¤',	# general currency sign	 
    0xA5 =>	'¥',	# yen sign	 
    0xA6 =>	'¦',	# &brvbar;	broken vertical bar	 
    0xA7 =>	'§',	# section sign	 
    0xA8 =>	'¨',	# &die;	spacing dieresis or umlaut	 
    0xA9 =>	'©',	# copyright sign	 
    0xAA =>	'ª',	# feminine ordinal sign	 
    0xAB =>	'«',	# left double angle quote or guillemet	 
    0xAC =>	'¬',	# logical not sign	 
    0xAD =>	'­',	# soft hyphen	 
    0xAE =>	'®',	# registered trademark sign	 
    0xAF =>	'¯',	# &hibar;	spacing macron long accent	 
    0xB0 =>	'°',	# degree sign	 
    0xB1 =>	'±',	# plus-or-minus sign	 
    0xB2 =>	'²',	# superscript 2	 
    0xB3 =>	'³',	# superscript 3	 
    0xB4 =>	'´',	# spacing accute accent	 
    0xB5 =>	'µ',	# micro sign, mu	 
    0xB6 =>	'¶',	# paragraph sign, pilcrow sign	 
    0xB7 =>	'·',	# middle dot, centered dot	 
    0xB8 =>	'¸',	# spacing cedilla	 
    0xB9 =>	'¹',	# superscript 1	 
    0xBA =>	'º',	# masculine ordinal indicator	 
    0xBB =>	'»',	# right double angle quote or guillemet	 
    0xBC =>	'¼',	# fraction 1/4	 
    0xBD =>	'½',	# &half;	fraction 1/2	 
    0xBE =>	'¾',	# fraction 3/4	 
    0xBF =>	'¿',	# inverted question mark	 
    # Upper Case Latin-1 Letters
    0xC0 =>	'À',	# capital A grave	 
    0xC1 =>	'Á',	# capital A acute	 
    0xC2 =>	'Â',	# capital A circumflex	 
    0xC3 =>	'Ã',	# capital A tilde	 
    0xC4 =>	'Ä',	# capital A dieresis or umlaut	 
    0xC5 =>	'Å',	# capital A ring	 
    0xC6 =>	'Æ',	# capital AE ligature	 
    0xC7 =>	'Ç',	# capital C cedilla	 
    0xC8 =>	'È',	# capital E grave	 
    0xC9 =>	'É',	# capital E acute	 
    0xCA =>	'Ê',	# capital E circumflex	 
    0xCB =>	'Ë',	# capital E dieresis or umlaut	 
    0xCC =>	'Ì',	# capital I grave	 
    0xCD =>	'Í',	# capital I acute	 
    0xCE =>	'Î',	# capital I circumflex	 
    0xCF =>	'Ï',	# capital I dieresis or umlaut	 
    0xD0 =>	'Ð',	# capital ETH	 
    0xD1 =>	'Ñ',	# capital N tilde	 
    0xD2 =>	'Ò',	# capital O grave	 
    0xD3 =>	'Ó',	# capital O acute	 
    0xD4 =>	'Ô',	# capital O circumflex	 
    0xD5 =>	'Õ',	# capital O tilde	 
    0xD6 =>	'Ö',	# capital O dieresis or umlaut	 
    0xD7 =>	'×',	# multiplication sign	 
    0xD8 =>	'Ø',	# capital O slash	 
    0xD9 =>	'Ù',	# capital U grave	 
    0xDA =>	'Ú',	# capital U acute	 
    0xDB =>	'Û',	# capital U circumflex	 
    0xDC =>	'Ü',	# capital U dieresis or umlaut	 
    0xDD =>	'Ý',	# capital Y acute	 
    0xDE =>	'Þ',	# capital THORN	 
    0xDF =>	'ß',	# small sharp s, sz ligature	 
    # Lower Case Latin-1 Letters
    0xE0 =>	'à',	# small a grave	 
    0xE1 =>	'á',	# small a acute	 
    0xE2 =>	'â',	# small a circumflex	 
    0xE3 =>	'ã',	# small a tilde	 
    0xE4 =>	'ä',	# small a dieresis or umlaut	 
    0xE5 =>	'å',	# small a ring	 
    0xE6 =>	'æ',	# small ae ligature	 
    0xE7 =>	'ç',	# small c cedilla	 
    0xE8 =>	'è',	# small e grave	 
    0xE9 =>	'é',	# small e acute	 
    0xEA =>	'ê',	# small e circumflex	 
    0xEB =>	'ë',	# small e dieresis or umlaut	 
    0xEC =>	'ì',	# small i grave	 
    0xED =>	'í',	# small i acute	 
    0xEE =>	'î',	# small i circumflex	 
    0xEF =>	'ï',	# small i dieresis or umlaut	 
    0xF0 =>	'ð',	# small eth	 
    0xF1 =>	'ñ',	# small n tilde	 
    0xF2 =>	'ò',	# small o grave	 
    0xF3 =>	'ó',	# small o acute	 
    0xF4 =>	'ô',	# small o circumflex	 
    0xF5 =>	'õ',	# small o tilde	 
    0xF6 =>	'ö',	# small o dieresis or umlaut	 
    0xF7 =>	'÷',	# division sign	 
    0xF8 =>	'ø',	# small o slash	 
    0xF9 =>	'ù',	# small u grave	 
    0xFA =>	'ú',	# small u acute	 
    0xFB =>	'û',	# small u circumflex	 
    0xFC =>	'ü',	# small u dieresis or umlaut	 
    0xFD =>	'ý',	# small y acute	 
    0xFE =>	'þ',	# small thorn	 
    0xFF =>	'ÿ',	# small y dieresis or umlaut	 
)

const ENCODE_ISO_LATIN_1 = Dict{Char, UInt8}(char => code for (code, char) in DECODE_ISO_LATIN_1)
